// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id                  String  @id @default(uuid())
  email               String  @unique
  name                String
  descriptionMarkdown String?
  imageURL            String?
  bannerURL           String?

  jobs        Job[]
  departments Department[]
  jobTags     JobTag[]
}

enum WorkplaceLocation {
  REMOTE
  HYBRID
  ON_SITE
}

enum EmploymentType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
  CONTRACTOR
}

enum JobStatus {
  OPEN
  CLOSED
}

model JobTag {
  id String @id @default(uuid())

  name           String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  job            Job?          @relation(fields: [jobId], references: [id])
  jobId          String?

  @@unique([organizationId, name])
}

model Job {
  id                  String            @id @default(uuid())
  title               String
  descriptionMarkdown String
  workplaceLocation   WorkplaceLocation
  country             String
  city                String
  zipCode             String?
  employmentType      EmploymentType
  salaryMin           Int?
  salaryMax           Int?
  jobStatus           JobStatus

  jobTags JobTag[]

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  jobApplications JobApplication[]

  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String

  createdAt DateTime @default(now())
}

model JobApplication {
  id String @id @default(uuid())

  email     String
  firstName String
  lastName  String
  phone     String?
  resumeURL String?

  job   Job    @relation(fields: [jobId], references: [id])
  jobId String

  createdAt DateTime @default(now())

  @@unique([jobId, email])
}

model Department {
  id String @id @default(uuid())

  name String @unique

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String

  jobs Job[]
}
